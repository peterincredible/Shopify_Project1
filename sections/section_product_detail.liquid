<div class="product_detail_img_container_carousel" x-data="swiper_data">
  
  <!---- this is where the carousel will sit -->
          <div class="swiper">
            <!-- Additional required wrapper -->
            <div class="swiper-wrapper !h-[90%]">
              <!-- Slides -->
              {% for image in product.images%}
                  <div class="swiper-slide">
                    <img src="{{image | img_url: 'large' }}" alt="cant display image" class="product_img"/>
                  </div>
              {% endfor %}
            </div>
            <!-- If we need navigation buttons -->
            <div class="pagination_navigation_wrapper">
              <div class="swiper-button-prev modify_navigation_btn" @click="prev"></div>
              {% comment %} <i class="fa-solid fa-less-than"></i> {% endcomment %}
               <span x-ref="swipper_index" class="navigation_index_display"></span>
               {% comment %} <i class="fa-solid fa-greater-than"></i> {% endcomment %}
              <div class="swiper-button-next modify_navigation_btn text-xs" @click="next"></div>
            </div>
           
          
            <!-- If we need scrollbar -->
            {% comment %} <div class="swiper-scrollbar"></div> {% endcomment %}
          </div>
  <!-- end of this block -->
</div>
<div class=" product_detail_img_container bg-red-500 text-white p-2">
     <div class=" h-[400px] bg-white mt-2">

     </div>
     <div class=" h-[400px] bg-green-500 mt-2">

     </div>
     <div class=" h-[400px] bg-purple-400 mt-2">
        

     </div>
</div>
<div class="product_detail_others_info_container">
     <div class="sticky top-0 z-[1]" x-data="variantSelector">
            <p class="product_vendor">{{product.vendor}}</p>
            <h1 class=" text-3xl">{{product.title}}</h1>
            <p  class="product_price"> {{product.price |  money_with_currency}}</p>
            {% form 'product',product %}
              {% assign current_selected_variant = product.selected_or_first_available_variant%}
              {% comment %} {{current_selected_variant |  json}} {% endcomment %}
              <input type="hidden" x-ref="variantSelector" data-variants="{{product.variants |  json }}"/>
              {% for product_option in product.options_with_values%}
                <div>
                  {% assign product_option_loop_index = forloop.index0 %}
                    <p class="product_size">{{product_option.name}} </p>
                    <div class="variant_item_parent">
                      {% for pov in product_option.values %}
                        {% if pov == current_selected_variant.options[product_option_loop_index] %}
                                <span class="variant_item variant_selected" @click="variantItemChanged">{{pov}}</span>
                                {% else %}
                                <span class="variant_item" @click="variantItemChanged">{{pov}}</span>
                        {% endif %}
                          
                      {% endfor %}
                    </div>
                </div>
              {% endfor %}
              <div>
                <p class="product_size">quantity </p>
                <div>
                  <button @click.prevent="quantityAdd">add</button>
                  <input type="text" name="quantity" min="1" :value="quantity">
                  {% comment %} <span ></span> {% endcomment %}
                  <button @click.prevent="quantitySub">sub</button>
                </div>
              </div>
            <input type="submit" value="Add to cart">
          {% endform %}

            {% comment %} {% for variant in product.variants %}
                <span>{{variant.title}}</span>
            {% endfor %} {% endcomment %}

            {% comment %} {% assign current_variant = product.selected_or_first_available_variant %}
            <p>{{current_variant.title}}</p>
            <!-- Product price -->
            <div class="price">
              <span class="price-reg">{{ current_variant.price | money }}</span>

              {% if current_variant.compare_at_price > current_variant.price %}
                <span class="price-sale"><s>{{ current_variant.compare_at_price | money }}</s></span>
              {% endif %} {% endcomment %}
            </div>
      </div>
     

</div>
<script>
        document.addEventListener('alpine:init', () => {
          
         Alpine.data('swiper_data', () => ({
             open: false,
             swipper:null,
             swipper_index:null,
             init() {
              this.swipper = new Swiper('.swiper', 
              {
                            // Optional parameters
                            direction: 'horizontal',
                            loop: true,

                            // If we need pagination
                            pagination: {
                              el: '.swiper-pagination',
                            },

                            // // Navigation arrows
                            // navigation: {
                            //   nextEl: '.swiper-button-next',
                            //   prevEl: '.swiper-button-prev',
                            // },

                            // And if we need scrollbar
                            // scrollbar: {
                            //   el: '.swiper-scrollbar',
                            // },
                });

                this.updateIndexDisplayNo();
                  
              },
             updateIndexDisplayNo(){
                this.$refs.swipper_index.innerText=this.swipper.realIndex+1+" / "+this.swipper.slides.length;
             },
             toggle() {
                 console.log("toggle clicked hippi")
                 this.next();
             },
             next(){
              // console.log(this.$refs.swipper_index,"swiper index",this.swipper.activeIndex,this.swipper.slides.length)
               this.swipper.slideNext(500,true)
               this.updateIndexDisplayNo();
             },
             prev(){
               
               this.swipper.slidePrev(500,true)
               this.updateIndexDisplayNo();
             }

         }))

         Alpine.data("variantSelector",()=>({
          variantSelectorParsed:{{product.variants |  json }},
          priceMoneyPrefix:"",
          priceMoneyProfix:"",
          quantity:1,
          init(){
             let priceElement = document.querySelector(".product_price");
             this.priceMoneyPrefix = priceElement.innerText[0];
             this.priceMoneyProfix = priceElement.innerText.split(" ")[1];
             this.updateDeepLink();
          },
          getSelectedVariants(){
                let selected_variants = [...document.querySelectorAll(".variant_selected")];
                let result = selected_variants.map(data=>data.innerText).join(" / ");
                // console.dir(result);
               return this.findVariantIdByTitle(result);
          },
          findVariantIdByTitle(title=""){
             return this.variantSelectorParsed.find((variant) => variant.title == title);
          },
          variantItemChanged(e){
              let target = e.target;
              let parent = target.parentElement
              let siblings= [...parent.children].filter(child=>child !== target)
              siblings.forEach(element => {
                    element.classList.remove("variant_selected");
              });
              if(!target.classList.contains("variant_selected")){
                  target.classList.add("variant_selected");
              }
              this.calculatePrice();
              this.updateDeepLink();
              // let variant = this.getSelectedVariants();

              // if(variant){
              //     console.log(variant.price,variant);
              //     let price = parseFloat(variant.price).toFixed(2);
              //     let priceElement = document.querySelector(".product_price");
                  
              //     priceElement.innerText=this.priceMoneyPrefix+price+" "+this.priceMoneyProfix;
              // }

          },
          calculatePrice(){
            let variant = this.getSelectedVariants();

            if(variant){
                console.log(variant.price,variant,this.quantity);
                let price = parseFloat(variant.price * this.quantity).toFixed(2);
                let priceElement = document.querySelector(".product_price");
                
                priceElement.innerText=this.priceMoneyPrefix+price+" "+this.priceMoneyProfix;
            }
          },
          quantityAdd(e){
            
            this.quantity +=1;
            this.calculatePrice();
          },
          quantitySub(){
            this.quantity -=1
            if(this.quantity < 1){
              this.quantity = 1
              
            }
            this.calculatePrice()
          },
          updateDeepLink(){
            let variant = this.getSelectedVariants();
            if (history.pushState) {
                var href = window.location.protocol + "//" + window.location.host + window.location.pathname + '?variant='+variant.id;
                // console.log(href);
                window.history.pushState({path:href},'',href);
              }

            // let href = window.location.href;
            // href = href.replace(/(?variant=)[^\&]+/, '$1' + variant.id);
            // console.log("href",href);
            //  console.log("clicked update deep link =>",variant)
            // window.location.href = window.location.href.replace(/(?variant=)[^\&]+/, '$1' + variant.id);
            // window.location.href = window.location.href+"?variant="+variant.id;
            
          }

         }))
    })
</script>
</script>
{% schema %}

{
      "name": "Product Detail",
      "class": "section_product_detail_wrapper",
      "settings": [

        {
          "type": "number",
          "id": "img_no",
          "label": "Number Of Images To Display",
          "default": 4
        },
        {
            "type": "text",
            "default": "Variants",
            "id": "header_text",
            "label": "Header Text"
        }
      ]
}
{% endschema %}
